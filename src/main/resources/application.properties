server.port=8000
spring.datasource.url=jdbc:mysql://192.168.48.138:3306/test?characterEncoding=utf8&useSSL=false
spring.datasource.username=root
spring.datasource.password=10jqka@123
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#驼峰标识，表示数据库中用下划线开头的转到文本中后为大写，并取消下划线
mybatis.configuration.map-underscore-to-camel-case=true
#mybatisxml配置方式
mybatis.type-aliases-package=life.hrx.weibo.mapper
#给mybatis指定mapper的xml配置路径
mybatis.mapper-locations=classpath:mapper/*.xml

#spring email 配置
#邮箱host
spring.mail.host=smtp.qq.com
#smtp登录账号
spring.mail.username=410558427@qq.com
#设置密码，如果是QQ邮箱就是开启SMTP的授权码
spring.mail.password=cneeaomxeuvibibc
#邮箱的发件人
spring.mail.properties.from=410558427@qq.com


#spring data redis配置

# Redis 数据库索引（默认为 0）
spring.redis.database=0
spring.redis.host=192.168.48.138
spring.redis.port=6379
spring.redis.password=123456

#日志配置
#日志路径
logging.file=


#--------------以下配置在项目中被引用，不属于spring框架配置-------------------------

#以下配置用来配置谷歌验证码生成类库kaptcha的配置
kaptcha.border=no
kaptcha.border.color=105,179,90
kaptcha.image.width=100
kaptcha.image.height=45
kaptcha.session.key=code
kaptcha.textproducer.font.color=blue
kaptcha.textproducer.font.size=35
kaptcha.textproducer.char.length=4
kaptcha.textproducer.font.names=宋体,楷体,微软雅黑
#经过试验，这个配置应该是以分钟为单位的，如果超过这个分钟，那么就会自动删除验证码Session,但是我们在后端配置了自定义的超时时间，所以如果后端的时间超了，那么就会提早删除该session
kaptcha.session.date=60


#配置登录成功后需要响应的类型，是做JSON格式响应还是做页面响应
spring.security.logintype=JSON

#以下是阿里云短信接口配置
AliSms.accessKeyId=LTAI4Fhb5qTkjMYNGn19a5BT
AliSms.accessKeySecret=JpDTZn0zURLMmqADf831iWL6SyUcCK
#短信签名-可在阿里云短信控制台中找到
AliSms.signName=图灵社区
#短信模板code-可在阿里云短信控制台中找到，
AliSms.templateCode=SMS_185212963


#以下是关于JWT的配置

#该header是携带JWT令牌的HTTP的Header的名称，虽然这里叫做JWTHeaderName,但是在十几生成中可读性越差越安全
jwt.header=JWTHeaderName
#用来为jwt基础信息加密和解密的密钥，虽然在这里的配置文件写死了，但是在实际生产中通常不直接写在配置文件里面，而是通过引用的启动参数传递，并且需要定期修改
jwt.secret=aabbccdd
##三分钟过期
#jwt.expiration=180000

